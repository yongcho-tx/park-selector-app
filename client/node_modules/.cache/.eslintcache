[{"/Users/yong/development/projects/park-selector-app/client/src/index.js":"1","/Users/yong/development/projects/park-selector-app/client/src/contexts/ParksProvider.jsx":"2","/Users/yong/development/projects/park-selector-app/client/src/App.js":"3","/Users/yong/development/projects/park-selector-app/client/src/components/Navbar.jsx":"4","/Users/yong/development/projects/park-selector-app/client/src/components/Stats.jsx":"5","/Users/yong/development/projects/park-selector-app/client/src/components/Home.jsx":"6","/Users/yong/development/projects/park-selector-app/client/src/components/About.jsx":"7","/Users/yong/development/projects/park-selector-app/client/src/components/SearchBar.jsx":"8","/Users/yong/development/projects/park-selector-app/client/src/components/ParksCard.jsx":"9","/Users/yong/development/projects/park-selector-app/client/src/components/Card.jsx":"10"},{"size":391,"mtime":1668138019136,"results":"11","hashOfConfig":"12"},{"size":1361,"mtime":1673650183223,"results":"13","hashOfConfig":"12"},{"size":680,"mtime":1668139627730,"results":"14","hashOfConfig":"12"},{"size":2017,"mtime":1673995838980,"results":"15","hashOfConfig":"12"},{"size":1586,"mtime":1680724618967,"results":"16","hashOfConfig":"12"},{"size":1245,"mtime":1674072837562,"results":"17","hashOfConfig":"12"},{"size":1370,"mtime":1671553621087,"results":"18","hashOfConfig":"12"},{"size":3696,"mtime":1680726977664,"results":"19","hashOfConfig":"12"},{"size":5027,"mtime":1674070160201,"results":"20","hashOfConfig":"12"},{"size":2238,"mtime":1668306621237,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1tewb6g",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"54"},"/Users/yong/development/projects/park-selector-app/client/src/index.js",[],[],"/Users/yong/development/projects/park-selector-app/client/src/contexts/ParksProvider.jsx",["55"],[],"import React, { useState, useEffect } from \"react\"\nimport axios from \"axios\"\nconst PORT = process.env.PORT || 8000\n\nconst ParksContext = React.createContext()\n\nconst ParksProvider = (props) => {\n  const [parksData, setParksData] = useState([])\n  const [randomizedData, setRandomizedData] = useState([])\n  const [visited, setVisited] = useState([])\n  const [toVisit, setToVisit] = useState([])\n\n  const getData = () => {\n    console.log(process.env.NODE_ENV)\n    axios\n      .get(`/parks`)\n      .then((res) => {\n        const parks = res.data\n        console.log(parks)\n        console.log(parks.data)\n        setParksData(parks.data)\n        localStorage.setItem(\"visitedParks\", JSON.stringify(parks))\n        console.log(localStorage)\n      })\n      .catch((err) => console.log(err))\n  }\n\n  useEffect(() => {\n    getData()\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem(\"visited\", JSON.stringify(visited))\n    localStorage.setItem(\"toVisit\", JSON.stringify(toVisit))\n\n    console.log(localStorage)\n  }, [visited, toVisit])\n\n  return (\n    <ParksContext.Provider\n      value={{\n        getData,\n        parksData,\n        randomizedData,\n        setRandomizedData,\n        visited,\n        setVisited,\n        toVisit,\n        setToVisit,\n      }}\n    >\n      {props.children}\n    </ParksContext.Provider>\n  )\n}\n\nexport { ParksProvider, ParksContext }\n","/Users/yong/development/projects/park-selector-app/client/src/App.js",[],[],"/Users/yong/development/projects/park-selector-app/client/src/components/Navbar.jsx",[],[],"/Users/yong/development/projects/park-selector-app/client/src/components/Stats.jsx",[],[],"/Users/yong/development/projects/park-selector-app/client/src/components/Home.jsx",[],[],"/Users/yong/development/projects/park-selector-app/client/src/components/About.jsx",[],[],"/Users/yong/development/projects/park-selector-app/client/src/components/SearchBar.jsx",["56","57","58","59"],[],"/Users/yong/development/projects/park-selector-app/client/src/components/ParksCard.jsx",["60","61","62"],[],"import React, { useContext, useEffect, useState } from \"react\"\nimport { ParksContext } from \"../contexts/ParksProvider\"\nimport Card from \"./Card\"\n\nconst ParksCard = (props) => {\n  const { parksData } = useContext(ParksContext)\n  const [startingPosition, setStartingPosition] = useState(0)\n  const [trialRandParks, setTrialRandParks] = useState([])\n  const [parkHistory, setParkHistory] = useState([])\n  const [showHistory, setShowHistory] = useState(false)\n  const [scrollNumMin, setScrollNumMin] = useState(0)\n  const [scrollNumMax, setScrollNumMax] = useState(0)\n\n  const randomParks = (limit) => {\n    let randParks = []\n    if (parksData.length > 0) {\n      for (let i = startingPosition; i < limit + startingPosition; i++) {\n        let random = parksData[Math.floor(Math.random() * parksData.length)]\n        randParks.push(random)\n      }\n    }\n\n    setParkHistory((prevHistory) => [...prevHistory, ...randParks])\n    console.log(parkHistory)\n    return setTrialRandParks(randParks)\n  }\n  const displayParks = showHistory\n    ? parkHistory &&\n      parkHistory.map((park, index) => {\n        if (index < scrollNumMax && index >= scrollNumMin) {\n          return <Card park={park} />\n        }\n      })\n    : trialRandParks.length === props.cardCount &&\n      trialRandParks.map((park) => {\n        return <Card park={park} />\n      })\n\n  useEffect(() => {\n    setShowHistory(false)\n    setScrollNumMin(parkHistory.length - 6)\n    setScrollNumMax(parkHistory.length)\n    randomParks(props.cardCount)\n  }, [props.cardCount])\n\n  return (\n    <>\n      {parksData.length <= 0 ? (\n        <p>Is loading</p>\n      ) : (\n        <>\n          {showHistory && (\n            <div style={{ textAlign: \"center\" }}>\n              <h1>\n                {\" \"}\n                Displaying Parks-list {scrollNumMin + 1} to{\" \"}\n                {scrollNumMax > parkHistory.length\n                  ? parkHistory.length\n                  : scrollNumMax}{\" \"}\n                of {parkHistory.length}\n              </h1>\n            </div>\n          )}\n          <div className='grid p-5 sm:grid-cols-2 lg:grid-cols-3 gap-8 m-5'>\n            {displayParks}\n          </div>\n          <div className='flex justify-center mt-4 mb-8 gap-3'>\n            <button\n              // className='w-[fit] h-[56px] m-2 rounded bg-blue-200'\n              type='button'\n              data-mdb-ripple='true'\n              data-mdb-ripple-color='light'\n              className='inline-block mx-3 font-normal px-6 py-2.5 bg-sky-400 text-white sm:font-medium text-xs leading-tight uppercase rounded shadow-md hover:bg-sky-500 hover:shadow-lg focus:bg-sky-500 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-sky-600 active:shadow-lg transition duration-150 ease-in-out'\n              onClick={() => randomParks(props.cardCount)}\n            >\n              Add {props.cardCount} New Parks To View\n            </button>\n            <button\n              // className='w-[125px] h-[56px] m-2 rounded border-spacing-0 border-black bg-red-200'\n              className='inline-block px-6 py-2.5 bg-sky-400 text-white font-medium text-xs leading-tight uppercase rounded shadow-md hover:bg-sky-500 hover:shadow-lg focus:bg-sky-500 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-sky-600 active:shadow-lg transition duration-150 ease-in-out'\n              type='button'\n              data-mdb-ripple='true'\n              data-mdb-ripple-color='light'\n              onClick={() => {\n                setShowHistory(true)\n                setScrollNumMin((prevScrollNumMin) =>\n                  prevScrollNumMin - 6 <= 0 ? 0 : prevScrollNumMin - 6\n                )\n                setScrollNumMax((prevScrollNumMax) =>\n                  prevScrollNumMax - 6 <= 6 ? 6 : prevScrollNumMax - 6\n                )\n              }}\n            >\n              Prev Parks\n            </button>\n            <button\n              // className='w-[125px] h-[56px] m-2 rounded border bg-green-200'\n              type='button'\n              data-mdb-ripple='true'\n              data-mdb-ripple-color='light'\n              className='inline-block mx-3 px-6 py-3.5 bg-sky-400 text-white font-medium text-xs leading-tight uppercase rounded shadow-md hover:bg-sky-500 hover:shadow-lg focus:bg-sky-500 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-sky-600 active:shadow-lg transition duration-150 ease-in-out'\n              onClick={() => {\n                setShowHistory(true)\n                setScrollNumMin((prevScrollNumMin) =>\n                  prevScrollNumMin >= parkHistory.length - 6\n                    ? prevScrollNumMin\n                    : prevScrollNumMin + 6\n                )\n                setScrollNumMax((prevScrollNumMax) =>\n                  prevScrollNumMax >= parkHistory.length\n                    ? prevScrollNumMax\n                    : prevScrollNumMax + 6\n                )\n              }}\n            >\n              Next Parks\n            </button>\n          </div>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default ParksCard\n","/Users/yong/development/projects/park-selector-app/client/src/components/Card.jsx",["63","64"],[],"import { ParksContext } from \"../contexts/ParksProvider\"\nimport { useState, useContext } from \"react\"\n\nconst Card = ({ park }) => {\n  const { visited, toVisit, setVisited, setToVisit } = useContext(ParksContext)\n  const [isChecked, setIsChecked] = useState({ visited: false, toVisit: false })\n  const parkStates = park.states.split(\",\").join(\", \")\n\n  const handleChange = (e) => {\n    if (e.target.checked === true) {\n      if (e.target.value === \"visited\") {\n        const newVisited = [...visited, park]\n        localStorage.setItem(\"visited\", newVisited)\n        setVisited(newVisited)\n      } else {\n        const newToVisit = [...toVisit, park]\n        localStorage.setItem(\"toVisit\", newToVisit)\n        setToVisit(newToVisit)\n      }\n    }\n    console.log(e.target.checked)\n    return setIsChecked((prev) => ({\n      ...prev,\n      [e.target.name]: !prev[e.target.name],\n    }))\n  }\n\n  return (\n    <div className='border-2 rounded-lg w-full' key={park.id}>\n      <h2 className='font-bold text-center m-4 hover:bg-yellow-50 text-xl sm:text-2xl lg:text-3xl'>\n        <a className='no-underline' target='_blank' href={park.url}>\n          {park.fullName},{\" \"}\n        </a>\n        <span className='break-words'>{parkStates}</span>\n      </h2>\n      <p className='m-4'>{park.description}</p>\n      <img className='rounded-lg p-6' src={park.images[0].url} />\n      <div className='pb-2 flex items-center justify-evenly'>\n        <div>\n          <label className='flex items-center justify-center'>\n            Want to Visit?{\" \"}\n            <input\n              type='checkbox'\n              name='toVisit'\n              value='Want to Visit'\n              checked={isChecked.toVisit}\n              onChange={handleChange}\n              className='w-10 h-4'\n            />\n          </label>\n        </div>\n        <div>\n          <label className='flex items-center justify-center'>\n            Visited?{\" \"}\n            <input\n              type='checkbox'\n              name='visited'\n              value='visited'\n              checked={isChecked.visited}\n              onChange={handleChange}\n              className='w-10 h-4'\n            />\n          </label>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Card\n",{"ruleId":"65","severity":1,"message":"66","line":3,"column":7,"nodeType":"67","messageId":"68","endLine":3,"endColumn":11},{"ruleId":"65","severity":1,"message":"69","line":1,"column":39,"nodeType":"67","messageId":"68","endLine":1,"endColumn":45},{"ruleId":"70","severity":1,"message":"71","line":10,"column":32,"nodeType":"72","messageId":"73","endLine":10,"endColumn":34},{"ruleId":"65","severity":1,"message":"74","line":91,"column":9,"nodeType":"67","messageId":"68","endLine":91,"endColumn":37},{"ruleId":"75","severity":1,"message":"76","line":118,"column":5,"nodeType":"77","endLine":118,"endColumn":18,"suggestions":"78"},{"ruleId":"65","severity":1,"message":"79","line":7,"column":28,"nodeType":"67","messageId":"68","endLine":7,"endColumn":47},{"ruleId":"70","severity":1,"message":"80","line":29,"column":37,"nodeType":"72","messageId":"73","endLine":29,"endColumn":39},{"ruleId":"75","severity":1,"message":"81","line":44,"column":6,"nodeType":"77","endLine":44,"endColumn":23,"suggestions":"82"},{"ruleId":"83","severity":1,"message":"84","line":31,"column":9,"nodeType":"85","messageId":"86","endLine":31,"endColumn":69,"fix":"87"},{"ruleId":"88","severity":1,"message":"89","line":37,"column":7,"nodeType":"85","endLine":37,"endColumn":66},"no-unused-vars","'PORT' is assigned a value but never used.","Identifier","unusedVar","'useRef' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'renderedFilteredParksByState' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'parksData'. Either include it or remove the dependency array.","ArrayExpression",["90"],"'setStartingPosition' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","React Hook useEffect has missing dependencies: 'parkHistory.length' and 'randomParks'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setScrollNumMin' needs the current value of 'parkHistory.length'.",["91"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"92","text":"93"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",{"desc":"94","fix":"95"},{"desc":"96","fix":"97"},[1132,1132]," rel=\"noreferrer\"","Update the dependencies array to be: [parksData, searchQuery]",{"range":"98","text":"99"},"Update the dependencies array to be: [parkHistory.length, props.cardCount, randomParks]",{"range":"100","text":"101"},[2285,2298],"[parksData, searchQuery]",[1511,1528],"[parkHistory.length, props.cardCount, randomParks]"]