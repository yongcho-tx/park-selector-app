[{"/Users/yong/development/projects/park-selector-app/client/src/index.js":"1","/Users/yong/development/projects/park-selector-app/client/src/contexts/ParksProvider.jsx":"2","/Users/yong/development/projects/park-selector-app/client/src/App.js":"3","/Users/yong/development/projects/park-selector-app/client/src/components/Navbar.jsx":"4","/Users/yong/development/projects/park-selector-app/client/src/components/Stats.jsx":"5","/Users/yong/development/projects/park-selector-app/client/src/components/Home.jsx":"6","/Users/yong/development/projects/park-selector-app/client/src/components/About.jsx":"7","/Users/yong/development/projects/park-selector-app/client/src/components/SearchBar.jsx":"8","/Users/yong/development/projects/park-selector-app/client/src/components/ParksCard.jsx":"9","/Users/yong/development/projects/park-selector-app/client/src/components/Card.jsx":"10"},{"size":391,"mtime":1668138019136,"results":"11","hashOfConfig":"12"},{"size":1361,"mtime":1673650183223,"results":"13","hashOfConfig":"12"},{"size":680,"mtime":1668139627730,"results":"14","hashOfConfig":"12"},{"size":2017,"mtime":1673995838980,"results":"15","hashOfConfig":"12"},{"size":1431,"mtime":1668308344229,"results":"16","hashOfConfig":"12"},{"size":1009,"mtime":1671556910514,"results":"17","hashOfConfig":"12"},{"size":1370,"mtime":1671553621087,"results":"18","hashOfConfig":"12"},{"size":3862,"mtime":1673996393439,"results":"19","hashOfConfig":"12"},{"size":3742,"mtime":1673996567369,"results":"20","hashOfConfig":"12"},{"size":2238,"mtime":1668306621237,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1tewb6g",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"53"},"/Users/yong/development/projects/park-selector-app/client/src/index.js",[],[],"/Users/yong/development/projects/park-selector-app/client/src/contexts/ParksProvider.jsx",["54"],[],"import React, { useState, useEffect } from \"react\"\nimport axios from \"axios\"\nconst PORT = process.env.PORT || 8000\n\nconst ParksContext = React.createContext()\n\nconst ParksProvider = (props) => {\n  const [parksData, setParksData] = useState([])\n  const [randomizedData, setRandomizedData] = useState([])\n  const [visited, setVisited] = useState([])\n  const [toVisit, setToVisit] = useState([])\n\n  const getData = () => {\n    console.log(process.env.NODE_ENV)\n    axios\n      .get(`/parks`)\n      .then((res) => {\n        const parks = res.data\n        console.log(parks)\n        console.log(parks.data)\n        setParksData(parks.data)\n        localStorage.setItem(\"visitedParks\", JSON.stringify(parks))\n        console.log(localStorage)\n      })\n      .catch((err) => console.log(err))\n  }\n\n  useEffect(() => {\n    getData()\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem(\"visited\", JSON.stringify(visited))\n    localStorage.setItem(\"toVisit\", JSON.stringify(toVisit))\n\n    console.log(localStorage)\n  }, [visited, toVisit])\n\n  return (\n    <ParksContext.Provider\n      value={{\n        getData,\n        parksData,\n        randomizedData,\n        setRandomizedData,\n        visited,\n        setVisited,\n        toVisit,\n        setToVisit,\n      }}\n    >\n      {props.children}\n    </ParksContext.Provider>\n  )\n}\n\nexport { ParksProvider, ParksContext }\n","/Users/yong/development/projects/park-selector-app/client/src/App.js",[],[],"/Users/yong/development/projects/park-selector-app/client/src/components/Navbar.jsx",[],[],"/Users/yong/development/projects/park-selector-app/client/src/components/Stats.jsx",[],[],"/Users/yong/development/projects/park-selector-app/client/src/components/Home.jsx",[],[],"/Users/yong/development/projects/park-selector-app/client/src/components/About.jsx",[],[],"/Users/yong/development/projects/park-selector-app/client/src/components/SearchBar.jsx",["55","56","57","58","59","60","61","62","63"],[],"/Users/yong/development/projects/park-selector-app/client/src/components/ParksCard.jsx",["64","65","66"],[],"/Users/yong/development/projects/park-selector-app/client/src/components/Card.jsx",["67","68"],[],"import { ParksContext } from \"../contexts/ParksProvider\"\nimport { useState, useContext } from \"react\"\n\nconst Card = ({ park }) => {\n  const { visited, toVisit, setVisited, setToVisit } = useContext(ParksContext)\n  const [isChecked, setIsChecked] = useState({ visited: false, toVisit: false })\n  const parkStates = park.states.split(\",\").join(\", \")\n\n  const handleChange = (e) => {\n    if (e.target.checked === true) {\n      if (e.target.value === \"visited\") {\n        const newVisited = [...visited, park]\n        localStorage.setItem(\"visited\", newVisited)\n        setVisited(newVisited)\n      } else {\n        const newToVisit = [...toVisit, park]\n        localStorage.setItem(\"toVisit\", newToVisit)\n        setToVisit(newToVisit)\n      }\n    }\n    console.log(e.target.checked)\n    return setIsChecked((prev) => ({\n      ...prev,\n      [e.target.name]: !prev[e.target.name],\n    }))\n  }\n\n  return (\n    <div className='border-2 rounded-lg w-full' key={park.id}>\n      <h2 className='font-bold text-center m-4 hover:bg-yellow-50 text-xl sm:text-2xl lg:text-3xl'>\n        <a className='no-underline' target='_blank' href={park.url}>\n          {park.fullName},{\" \"}\n        </a>\n        <span className='break-words'>{parkStates}</span>\n      </h2>\n      <p className='m-4'>{park.description}</p>\n      <img className='rounded-lg p-6' src={park.images[0].url} />\n      <div className='pb-2 flex items-center justify-evenly'>\n        <div>\n          <label className='flex items-center justify-center'>\n            Want to Visit?{\" \"}\n            <input\n              type='checkbox'\n              name='toVisit'\n              value='Want to Visit'\n              checked={isChecked.toVisit}\n              onChange={handleChange}\n              className='w-10 h-4'\n            />\n          </label>\n        </div>\n        <div>\n          <label className='flex items-center justify-center'>\n            Visited?{\" \"}\n            <input\n              type='checkbox'\n              name='visited'\n              value='visited'\n              checked={isChecked.visited}\n              onChange={handleChange}\n              className='w-10 h-4'\n            />\n          </label>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Card\n",{"ruleId":"69","severity":1,"message":"70","line":3,"column":7,"nodeType":"71","messageId":"72","endLine":3,"endColumn":11},{"ruleId":"69","severity":1,"message":"73","line":1,"column":39,"nodeType":"71","messageId":"72","endLine":1,"endColumn":45},{"ruleId":"69","severity":1,"message":"74","line":4,"column":8,"nodeType":"71","messageId":"72","endLine":4,"endColumn":13},{"ruleId":"75","severity":1,"message":"76","line":12,"column":32,"nodeType":"77","messageId":"78","endLine":12,"endColumn":34},{"ruleId":"69","severity":1,"message":"79","line":27,"column":22,"nodeType":"71","messageId":"72","endLine":27,"endColumn":29},{"ruleId":"69","severity":1,"message":"80","line":27,"column":31,"nodeType":"71","messageId":"72","endLine":27,"endColumn":38},{"ruleId":"69","severity":1,"message":"81","line":27,"column":40,"nodeType":"71","messageId":"72","endLine":27,"endColumn":50},{"ruleId":"69","severity":1,"message":"82","line":27,"column":52,"nodeType":"71","messageId":"72","endLine":27,"endColumn":62},{"ruleId":"69","severity":1,"message":"83","line":93,"column":9,"nodeType":"71","messageId":"72","endLine":93,"endColumn":37},{"ruleId":"84","severity":1,"message":"85","line":120,"column":5,"nodeType":"86","endLine":120,"endColumn":18,"suggestions":"87"},{"ruleId":"69","severity":1,"message":"88","line":7,"column":28,"nodeType":"71","messageId":"72","endLine":7,"endColumn":47},{"ruleId":"75","severity":1,"message":"89","line":29,"column":37,"nodeType":"77","messageId":"78","endLine":29,"endColumn":39},{"ruleId":"84","severity":1,"message":"90","line":44,"column":6,"nodeType":"86","endLine":44,"endColumn":23,"suggestions":"91"},{"ruleId":"92","severity":1,"message":"93","line":31,"column":9,"nodeType":"94","messageId":"95","endLine":31,"endColumn":69,"fix":"96"},{"ruleId":"97","severity":1,"message":"98","line":37,"column":7,"nodeType":"94","endLine":37,"endColumn":66},"no-unused-vars","'PORT' is assigned a value but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'bgImg' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'visited' is assigned a value but never used.","'toVisit' is assigned a value but never used.","'setVisited' is assigned a value but never used.","'setToVisit' is assigned a value but never used.","'renderedFilteredParksByState' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'parksData'. Either include it or remove the dependency array.","ArrayExpression",["99"],"'setStartingPosition' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","React Hook useEffect has missing dependencies: 'parkHistory.length' and 'randomParks'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setScrollNumMin' needs the current value of 'parkHistory.length'.",["100"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"101","text":"102"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},[1132,1132]," rel=\"noreferrer\"","Update the dependencies array to be: [parksData, searchQuery]",{"range":"107","text":"108"},"Update the dependencies array to be: [parkHistory.length, props.cardCount, randomParks]",{"range":"109","text":"110"},[2415,2428],"[parksData, searchQuery]",[1511,1528],"[parkHistory.length, props.cardCount, randomParks]"]