{"ast":null,"code":"import _slicedToArray from\"/Users/yong/development/projects/park-selector-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useContext,useRef,useEffect}from\"react\";import{ParksContext}from\"../contexts/ParksProvider\";import Card from\"./Card\";import bgImg from\"../assets/mountain-lake.png\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var filterParks=function filterParks(parkArr,queryString){if(!queryString){return[];}return parkArr.filter(function(park){var parksName=park.fullName.toLowerCase();if(parksName.includes(queryString)){return parksName.includes(queryString);}if(park.states.includes(queryString)){return park.states.includes(queryString);}if(park.states===queryString){return park.states===queryString;}});};var SearchBar=function SearchBar(){var _useContext=useContext(ParksContext),parksData=_useContext.parksData,visited=_useContext.visited,toVisit=_useContext.toVisit,setVisited=_useContext.setVisited,setToVisit=_useContext.setToVisit;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),searchQuery=_useState2[0],setSearchQuery=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),filteredParks2=_useState4[0],setFilteredParks2=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),chosenState=_useState6[0],setChosenState=_useState6[1];var states=[\"AK\",\"AL\",\"AR\",\"AS\",\"AZ\",\"CA\",\"CO\",\"CT\",\"DC\",\"DE\",\"FL\",\"GA\",\"GU\",\"HI\",\"IA\",\"ID\",\"IL\",\"IN\",\"KS\",\"KY\",\"LA\",\"MA\",\"MD\",\"ME\",\"MI\",\"MN\",\"MO\",\"MS\",\"MT\",\"NC\",\"ND\",\"NE\",\"NH\",\"NJ\",\"NM\",\"NV\",\"NY\",\"OH\",\"OK\",\"OR\",\"PA\",\"PR\",\"RI\",\"SC\",\"SD\",\"TN\",\"TX\",\"UT\",\"VA\",\"VI\",\"VT\",\"WA\",\"WI\",\"WV\",\"WY\"];var filteredParksByState=parksData.filter(function(park){return park.states===chosenState;});var renderedFilteredParksByState=filteredParksByState.map(function(park){return/*#__PURE__*/_jsx(Card,{park:park});});var dropDown=function dropDown(){document.getElementById(\"myDropdown\").classList.toggle(\"show\");};window.onclick=function(event){if(!event.target.matches(\".dropbtn\")){var dropdowns=document.getElementsByClassName(\"dropdown-content\");var i;for(i=0;i<dropdowns.length;i++){var openDropdown=dropdowns[i];if(openDropdown.classList.contains(\"show\")){openDropdown.classList.remove(\"show\");}}}};useEffect(function(){return setFilteredParks2(function(prevParks){return filterParks(parksData,searchQuery);});},[searchQuery]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col justify-center items-center m-4\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"header-search\",children:/*#__PURE__*/_jsx(\"span\",{className:\"visually-hidden\",children:\"Search National Parks\"})}),/*#__PURE__*/_jsx(\"input\",{className:\"h-7 w-[500px] m-3 border border-black rounded p-2\",type:\"text\",placeholder:\"search national parks\",value:searchQuery,onInput:function onInput(e){return setSearchQuery(e.target.value);}}),/*#__PURE__*/_jsxs(\"div\",{className:\"relative inline-block\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"p-3 text-xs dropbtn\",onClick:function onClick(){dropDown();},children:\"Dropdown\"}),/*#__PURE__*/_jsx(\"div\",{id:\"myDropdown\",className:\"hidden min-w-[160px]\",children:states.map(function(state){return/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(e){setSearchQuery(function(prevQuery){return e.target.name;});return setChosenState(function(prevState){return e.target.name;});},name:state,children:state});})})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"ml-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-3 gap-4 rounded-lg\",children:filteredParks2.map(function(park){return/*#__PURE__*/_jsx(Card,{park:park});})})})]});};export default SearchBar;","map":{"version":3,"names":["React","useState","useContext","useRef","useEffect","ParksContext","Card","bgImg","filterParks","parkArr","queryString","filter","park","parksName","fullName","toLowerCase","includes","states","SearchBar","parksData","visited","toVisit","setVisited","setToVisit","searchQuery","setSearchQuery","filteredParks2","setFilteredParks2","chosenState","setChosenState","filteredParksByState","renderedFilteredParksByState","map","dropDown","document","getElementById","classList","toggle","window","onclick","event","target","matches","dropdowns","getElementsByClassName","i","length","openDropdown","contains","remove","prevParks","e","value","state","prevQuery","name","prevState"],"sources":["/Users/yong/development/projects/park-selector-app/src/components/SearchBar.jsx"],"sourcesContent":["import React, { useState, useContext, useRef, useEffect } from \"react\"\nimport { ParksContext } from \"../contexts/ParksProvider\"\nimport Card from \"./Card\"\nimport bgImg from \"../assets/mountain-lake.png\"\n\nconst filterParks = (parkArr, queryString) => {\n  if (!queryString) {\n    return []\n  }\n\n  return parkArr.filter((park) => {\n    const parksName = park.fullName.toLowerCase()\n    if (parksName.includes(queryString)) {\n      return parksName.includes(queryString)\n    }\n    if (park.states.includes(queryString)) {\n      return park.states.includes(queryString)\n    }\n    if (park.states === queryString) {\n      return park.states === queryString\n    }\n  })\n}\n\nconst SearchBar = () => {\n  const { parksData, visited, toVisit, setVisited, setToVisit } =\n    useContext(ParksContext)\n  const [searchQuery, setSearchQuery] = useState(\"\")\n  const [filteredParks2, setFilteredParks2] = useState([])\n  const [chosenState, setChosenState] = useState(\"\")\n  const states = [\n    \"AK\",\n    \"AL\",\n    \"AR\",\n    \"AS\",\n    \"AZ\",\n    \"CA\",\n    \"CO\",\n    \"CT\",\n    \"DC\",\n    \"DE\",\n    \"FL\",\n    \"GA\",\n    \"GU\",\n    \"HI\",\n    \"IA\",\n    \"ID\",\n    \"IL\",\n    \"IN\",\n    \"KS\",\n    \"KY\",\n    \"LA\",\n    \"MA\",\n    \"MD\",\n    \"ME\",\n    \"MI\",\n    \"MN\",\n    \"MO\",\n    \"MS\",\n    \"MT\",\n    \"NC\",\n    \"ND\",\n    \"NE\",\n    \"NH\",\n    \"NJ\",\n    \"NM\",\n    \"NV\",\n    \"NY\",\n    \"OH\",\n    \"OK\",\n    \"OR\",\n    \"PA\",\n    \"PR\",\n    \"RI\",\n    \"SC\",\n    \"SD\",\n    \"TN\",\n    \"TX\",\n    \"UT\",\n    \"VA\",\n    \"VI\",\n    \"VT\",\n    \"WA\",\n    \"WI\",\n    \"WV\",\n    \"WY\",\n  ]\n\n  const filteredParksByState = parksData.filter(\n    (park) => park.states === chosenState\n  )\n  const renderedFilteredParksByState = filteredParksByState.map((park) => (\n    <Card park={park} />\n  ))\n\n  const dropDown = () => {\n    document.getElementById(\"myDropdown\").classList.toggle(\"show\")\n  }\n\n  window.onclick = function (event) {\n    if (!event.target.matches(\".dropbtn\")) {\n      let dropdowns = document.getElementsByClassName(\"dropdown-content\")\n      let i\n      for (i = 0; i < dropdowns.length; i++) {\n        let openDropdown = dropdowns[i]\n        if (openDropdown.classList.contains(\"show\")) {\n          openDropdown.classList.remove(\"show\")\n        }\n      }\n    }\n  }\n\n  useEffect(\n    () =>\n      setFilteredParks2((prevParks) => {\n        return filterParks(parksData, searchQuery)\n      }),\n    [searchQuery]\n  )\n  return (\n    <>\n      <div className='flex flex-col justify-center items-center m-4'>\n        <label htmlFor='header-search'>\n          <span className='visually-hidden'>Search National Parks</span>\n        </label>\n        <input\n          className='h-7 w-[500px] m-3 border border-black rounded p-2'\n          type='text'\n          placeholder='search national parks'\n          value={searchQuery}\n          onInput={(e) => setSearchQuery(e.target.value)}\n        />\n\n        <div className='relative inline-block'>\n          <button\n            className='p-3 text-xs dropbtn'\n            onClick={() => {\n              dropDown()\n            }}\n          >\n            Dropdown\n          </button>\n          <div id='myDropdown' className='hidden min-w-[160px]'>\n            {states.map((state) => (\n              <button\n                onClick={(e) => {\n                  setSearchQuery((prevQuery) => e.target.name)\n                  return setChosenState((prevState) => e.target.name)\n                }}\n                name={state}\n              >\n                {state}\n              </button>\n            ))}\n          </div>\n        </div>\n      </div>\n      <div className='ml-4'>\n        <div className='grid grid-cols-3 gap-4 rounded-lg'>\n          {filteredParks2.map((park) => (\n            <Card park={park} />\n          ))}\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default SearchBar\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}